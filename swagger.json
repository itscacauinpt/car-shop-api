{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Car Shop Docs",
    "description": "An API for a Car Shop with MongoDB and Mongoose.",
    "termsOfService": "http://localhost:3001/terms/",
    "contact": {
      "email": "anaclaudia.sza@outlook.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/v1",
      "description": "Development server"
    }
  ],
  "tags": [
    {
    "name": "Cars",
    "description": "Access to Cars"
    },
    {
      "name": "Motorcycles",
      "description": "Access to Motorcycles"
    }
  ],
  "paths": {
    "/cars": {
      "get": {
        "tags": ["Cars"],
        "summary": "Find all cars.",
        "responses": {
          "200": {
            "description": "Get all cars route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Car"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Cars"],
        "summary": "Create a new cars route.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Car"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "400": {
            "description": "Failed/invalid schema.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid schema."
                }
              }
            }
          }
        }
      }
    },

    "/cars/{id}": {
      "get": {
        "tags": ["Cars"],
        "summary": "Get car by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "400": {
            "description": "Failed/invalid schema.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid schema."
                }
              }
            }
          },
          "404": {
            "description": "Failed/not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Not found."
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Cars"],
        "summary": "Update car.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Car"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "400": {
            "description": "Failed/invalid schema.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid schema."
                }
              }
            }
          },
          "404": {
            "description": "Failed/not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Not found."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Cars"],
        "summary": "Delete car.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "400": {
            "description": "Failed/invalid schema.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid schema."
                }
              }
            }
          },
          "404": {
            "description": "Failed/not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Not found."
                }
              }
            }
          }
        }
      }
    },

    "/motorcycles": {
      "get": {
        "tags": ["Motorcycles"],
        "summary": "Find all motorcycles.",
        "responses": {
          "200": {
            "description": "Get all motorcycles route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Motorcycle"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Motorcycles"],
        "summary": "Create a new motorcycle.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Motorcycle"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Motorcycle"
                }
              }
            }
          },
          "400": {
            "description": "Failed/invalid schema.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid schema."
                }
              }
            }
          }
        }
      }
    },

    "/motorcycles/{id}": {
      "get": {
        "tags": ["Motorcycles"],
        "summary": "Get motorcycle by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Motorcycle"
                }
              }
            }
          },
          "400": {
            "description": "Failed/invalid schema.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid schema."
                }
              }
            }
          },
          "404": {
            "description": "Failed/not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Not found."
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Motorcycles"],
        "summary": "Update motorcycle.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Motorcycle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Motorcycle"
                }
              }
            }
          },
          "400": {
            "description": "Failed/invalid schema.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid schema."
                }
              }
            }
          },
          "404": {
            "description": "Failed/not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Not found."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Motorcycles"],
        "summary": "Delete motorcycle.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Motorcycle"
                }
              }
            }
          },
          "400": {
            "description": "Failed/invalid schema.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Invalid schema."
                }
              }
            }
          },
          "404": {
            "description": "Failed/not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Not found."
                }
              }
            }
          }
        }
      }
    }

  },

  "components": {
    "schemas": {
      "Car": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string"
          },
          "year": {
            "type": "number"
          },
          "color": {
            "type": "string"
          },
          "buyValue": {
            "type": "number"
          },
          "doorsQty": {
            "type": "number"
          },
          "seatsQty": {
            "type": "number"
          }
        }
      },
      "Motorcycle": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string"
          },
          "year": {
            "type": "number"
          },
          "color": {
            "type": "string"
          },
          "buyValue": {
            "type": "number"
          },
          "category": {
            "type": "string",
            "enum": ["Street", "Custom", "Trail"]
          },
          "engineCapacity": {
            "type": "number"
          }
        }
      }
    }
  }
}